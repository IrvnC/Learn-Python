from jam import *
def main():
    print("Test MakeJam: ",end='')
    MakeJamTest(23,45,50)
    
    j1=MakeJam(23,45,50)
    print("Getter dan Setter")
    print("Jam : {}".format(GetHour(j1)))
    print("Menit : {}".format(GetMinute(j1)))
    print("Detik : {}".format(GetSecond(j1)))
    print("Jam j1 : ",end='')
    TulisJam(j1)
    
    j2=MakeJam(0,0,0)
    print("Jam j2 : ",end='')
    TulisJam(j2)
    
    print("Setting ulang j1 dan j2")
    j1["jam"]=SetHH(j1,2)
    j1["menit"]=SetMM(j1,20)
    j1["detik"]=SetSS(j1,20)
    print("Jam j1 : ",end='')
    TulisJam(j1)
    j2["jam"]=SetHH(j2,3)
    j2["menit"]=SetMM(j2,20)
    j2["detik"]=SetSS(j2,20)
    print("Jam j2 : ",end='')
    TulisJam(j2)
    
    print("Konversi")
    jconv=MakeJam(6,45,35)
    print("Konversi jam-detik 6:45:35 = {}".format(Jam2Detik(jconv)))
    d2j=Detik2Jam(Jam2Detik(jconv))
    print("Konversi jam-detik {} = ".format(Jam2Detik(jconv)),end="")
    TulisJam(d2j)
    
    print("j3=j1+j2")
    j3=MakeJam(21,12,59)
    j4=MakeJam(12,9,51)
    print("Jumlah j3+j4      : ",end="")
    jp=JPlus(j3,j4)
    TulisJam(jp)
    j5=MakeJam(12,34,55)
    j6=MakeJam(8,12,15)
    print("Selisih j5-j6     : ",end='')
    jm=JMinus(j6,j5)
    TulisJam(jm)
    
    print("j1==j2 : {}".format(JEQ(j1,j2)))
    print("j1!=j2 : {}".format(JNEQ(j1,j2)))
    print("j1<j2 : {}".format(JLT(j1,j2)))
    print("j1>j2 : {}".format(JGT(j1,j2)))
    print("Next 1 detik j1  : %d"%Jam2Detik(NextDetik(j1)))
    print("Next 1 detik j2  : %d"%Jam2Detik(NextDetik(j2)))
    print("Next 15 detik j1 : %d"%Jam2Detik(NextNDetik(j1,15)))
    print("Next 15 detik j2 : %d"%Jam2Detik(NextNDetik(j2,15)))
    print("Prev 1 detik j1  : %d"%Jam2Detik(PrevDetik(j1)))
    print("Prev 1 detik j2  : %d"%Jam2Detik(PrevDetik(j2)))
    print("Prev 15 detik j1 : %d"%Jam2Detik(PrevNDetik(j1,15)))
    print("Prev 15 detik j2 : %d"%Jam2Detik(PrevNDetik(j2,15)))
    print("Durasi           : %d"%Durasi(j1,j2))
    print("Ta daa ! ")
if __name__ == '__main__':
    main()